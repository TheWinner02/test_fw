name: Download e Estrai Firmware Samsung

on:  
  workflow_dispatch:  # Permette di eseguire manualmente il workflow

jobs:
  download_firmware:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Scarica Firmware
      run: |
        # Usando curl per scaricare il firmware da una URL
        curl -L https://dl.samfwpremium.cloud/77573282f3209d5b9ddf43597d4256d5tymI8-coAj1QG-beWUn358P3Hx-vRqDAMENErpYiAqoeJWVAMYXeGqYsGQegLZE7WdDJkhkhjtAYaNSzTyLlgGFebskUrxuPRtOqe6V6uWgsz7ezfrAiE0QG0uANiUAVyVIYRspqoYgpLvCf81rAH6-c6HuJNK_oKuzxc0Fu2tzVG9BQq7fvvHcz1McbSazhlzUw64JYudik9ReapHfVQh7QmH3VaNYWtFTfWe8_ZaLOZAlgSsi4wvmFyHzMNYzUSDm0OS-W6yTbTtslfkVUcxw9CYjQC0HU97zcbPMQMWIleVe07o7Lp4-hbIMKZDIwe9FkkCeo667b0ae4FM5dZ0p9g1hZ_HPGhK7BUX1Pi00AI8WM08EpD9B_XYXUJRPmQ9PoCLejzzlDS665cDsf4XqPG5DlyumDs5Pmta3dGxEjTf3-S-IusprkICAps3uiZBrWMtB03XEbMA-40uPS94gNMoFGTHK0rvnRFv7s80uQzjE8I7NSWEJGJg2Q9niuyL32P_sUKfVYCzcLqZxpS_FFv1xtDLEWldNtgqtxU4bkN3j6YcNS7jsYM5PAnrU7s6i63P5eANnoI45Sc82SsEj2xVRWXyogSfJlX8omPHjeOF62kqWyxuQQIpAmO9Wjv0fXnr8sIGP8Gdr9yWBZ5HBZxozcbyUDswSSWVCgPtRfUurqk83jU90C8u2rwL-vc8WtAPS7rtZo8XmklKKyOiGDBD7Xa-kYIVASXOXJmqcMGb3qSGUwuhED8V8KGxEALZZnNPwWoB66l7TttuLWJbYBM1j1VaSB_A-YVs8GdFvPArqim9RoWJrx1MQPIURwTluaAcXdwDd1g1UunkG74chtuZL19mNbyW2-snqzMcLS45wwpALAuPMK7tb0VjAOpFeWFUwhnhflKgdrufS8Bq8LGG53MZvMez-ecGP8bbupTJQktZwTwz7FBK8LPuI61VbFhSHxMWt_RzU0z075g0cb9u9trFujiXvCVz_9n50QZmoFoKHj9SMvbOZS3EuPR6naZxJH-S7DUwKpPQvK6zfvxVgisVdDowBdnaUC6RX2_PQp5ZF1Whq4ZCqwO14tivk-w7XbMLYlkjcvxnFO7g?file_name=AP_A536BXXSDEYB1_A536BXXSDEYB1_MQB91722882_REV00_user_low_ship_MULTI_CERT_meta_OS14.tar.md5.zip -o firmware.zip

    - name: Estrai Firmware.zip
      run: |
        # Estrai il firmware se è in formato zip
        unzip firmware.zip -d firmware && rm -rf firmware.zip

    - name: Estrai md5
      run: |
        # Estrai il firmware se è in formato md5
        tar -xf firmware/*.tar.md5 super.img.lz4
        rm -rf firmware

    - name: Estrai lz4
      run: |
        # Estrai il firmware se è in formato lz4
        lz4 -d -q --rm super.img.lz4 super.img.sparse

    - name: Installa simg2imng
      run: |
        # Installa simg2img
        sudo apt-get update
        sudo apt-get install simg2img

    - name: Converti Sparse in Raw
      run: |
        # Converti sparse in raw
        simg2img super.img.sparse super.img && rm -rf super.img.sparse
        
    - name: Comprimi Firmware
      run: |
        # Comprimi il firmware
        zip -r -9 -FS -m firmware.zip super.img && rm -rf super.img
        
    - name: Crea Release GitHub
      id: create_release
      run: |
           # Crea una nuova release su GitHub usando il GITHUB_TOKEN predefinito
            response=$(curl -X POST \
           -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           -d '{"tag_name": "fw", "name": "Firmware", "body": "Release del firmware estratto.", "draft": false, "prerelease": false}' \
            https://api.github.com/repos/${{ github.repository }}/releases)
            release_id=$(echo $response | jq -r '.id')
            echo "release_id=$release_id" >> $GITHUB_ENV
      

    - name: Carica Firmware Estratto come Asset
      run: |
            # Carica il firmware estratto come asset nella release appena creata
            curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/zip" \
            --data-binary @firmware.zip \
            https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.release_id }}/assets?name=firmware.zip
