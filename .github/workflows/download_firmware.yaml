name: Download e Estrai Firmware Samsung

on:
  schedule:
    - cron: '0 0 * * *'  # Esegui ogni giorno a mezzanotte
  workflow_dispatch:  # Permette di eseguire manualmente il workflow

jobs:
  download_firmware:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Scarica Firmware
      run: |
        # Usando curl per scaricare il firmware da una URL
        curl -L https://dl.samfwpremium.cloud/e3d5e88517b128eb0520cf21bba89676AzwhFlFecC6b_qjsR3HRPG_qtsHPqyj8JRtoXxtHTtp4J6r_3fIhjPTt47LsWIqnGowjCZetav43seHMwusCBoPaxaWRUiBnTCyqMyJqjLJZO-Mi9KoHqPWpv6WUp9va6kpuNP6OEstFlJ22TA7LgWKeAHFXXFy_nKFIrtZUcPcdQwun573cob5kZnxKqljPifhycpgHU8nUIDULAAfqacE4228k57Vmc8IoxEkoNm3nxmmXmEM-DGf4e6cJ_HK2m_TRGyuR6KrBFhlEWR_qpZ35gS5olObQRN0zOnACePjKvLPH_FQ31-kiEgaLBmS0llYHmurR6FGqpMkayfaTYvhpSrdtEWuX5QhfoxAlppo7jgseZGzwu8Ruz7W4olizAhlce0i7iQ6y8nK5xaJUYFlKyJNbPR6Jrl3EsfGYVj-OPEW_hfXTnqYetMk3f8_tpB3baLyBsH5kyzwjTQK9cOrPYSd4YDVSVtxvfSx4fAVzuzHby3oO3_QNwQjn8a90vnk7cnMspkN-lirOOKAhMNizLi2j4g-A44ybbQq7EnzcinO97Nf-aGpkiMyQ8HS-VvOV9cTCQfrEIOuqIT8wugppgCKluX_IJ2LFMZ1W0-z9m1NadB9CkXopwxsWLb-1owX6sU7lo8fO5kvYWvryj5OWxsEJ2McKOQAoDXfgLiaxoE-jkqPbUlfu58-yWbnCcA1ZHOjwU3UX1Q_4LKA3BfBD-T3UWBMw1vqq9xYPy9vjwsUtFg7HraGGAPnSBldlg8abopwm6OiiQOc3pPKuDL30-JbXCPF_VGepz0lO-L1tj0Kdawk6aWO3hjyqMEAn6S6--RhIYW7bUNtk40vlSsLYnnCS98Y1ydb_NjLrpNsIp--87I_mOSZtBYu19Y0RMyN_Hia08KSleyg3kZgdktpfQmTxOLKrv9PESbSRJiMpnzh176p2FobAKtZJcGJPqCQ0jrrcGDNdrfI2qE1b023Ja5VBi_4CIwHsJ_snyVqJoL51be9_GFDlR19vDh3Ry_b2YekE3L57Ra0Lin__WR8RllFUqjca5Q4y7GvWdjJGc_ZlV4TWlvDHM2H46FZvz2mMnjjxsWHHKBFiuhEN_Q?file_name=CSC_OKR_N981NOKR7HYA1_MQB91005004_REV00_user_low_ship_MULTI_CERT.tar.md5.zip -o firmware.zip

    - name: Estrai Firmware.zip
      run: |
        # Estrai il firmware se è in formato zip
        unzip firmware.zip -d firmware

    - name: Estrai md5
      run: |
        # Estrai il firmware se è in formato md5
        mkdir lz4
        tar -xvf firmware/*.tar.md5 -C lz4
        rm -rf firmware

    - name: Estrai lz4
      run: |
        # Estrai il firmware se è in formato lz4
        mkdir img
        find lz4 -type f -name "*.img.lz4" -exec lz4 -d {} \;
        rm -rf lz4
        
    - name: Crea Release GitHub
      id: create_release
      run: |
        # Crea una nuova release su GitHub usando il GITHUB_TOKEN predefinito
        curl -X POST \
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -d '{"tag_name": "v1.0.0", "name": "Firmware v1.0.0", "body": "Release del firmware estratto.", "draft": false, "prerelease": false}' \
        https://api.github.com/repos/${{ github.repository }}/releases


    - name: Verifica il file da caricare
      run: |
        # Verifica che il file firmware.zip esista nella cartella estratta
        ls -al firmware_extracted/firmware.zip

    - name: Carica Firmware Estratto come Asset
      run: |
        # Carica il firmware estratto come asset nella release appena creata
        GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
        curl -X POST \
        -H "Authorization: token $GITHUB_TOKEN" \
        -H "Content-Type: application/zip" \
        --data-binary @firmware_extracted/firmware.zip \
        https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=firmware.zip
