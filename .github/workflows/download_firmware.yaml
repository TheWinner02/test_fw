name: Estrai Partizioni da Firmware Samsung

on:
  workflow_dispatch:
    inputs:
      firmware_url:
        description: "🔗 Inserisci il link di download diretto del firmware (.tar.md5.zip)"
        required: true
        type: string
      base_name:
        description: "📁 Inserisci il nome base per i file di output (es. A53, S23FE)"
        required: true
        type: string

jobs:
  extract_firmware:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Installa Dipendenze Necessarie
      run: |
        sudo apt update
        sudo apt install -y unzip lz4 python3 zip wget android-sdk-libsparse-utils
        echo "📦 Installazione di lpunpack precompilato..."
        wget -q https://github.com/erfanoabdi/LPTools/releases/download/2024.01/lpunpack -O /usr/local/bin/lpunpack
        chmod +x /usr/local/bin/lpunpack
        lpunpack --help || echo "✅ lpunpack installato correttamente"

    - name: Scarica Firmware
      run: |
        rm -rf firmware
        mkdir firmware
        echo "📦 Scarico firmware da:"
        echo "${{ github.event.inputs.firmware_url }}"
        curl -L "${{ github.event.inputs.firmware_url }}" -o firmware.zip

    - name: Estrai firmware.zip
      run: |
        unzip -q firmware.zip -d firmware
        rm firmware.zip

    - name: Estrai tutti i file .img.lz4 dal TAR
      run: |
        cd firmware
        for f in AP*.tar.md5; do
          echo "📦 Estrazione da $f"
          tar -xf "$f" --wildcards '*.img.lz4' || true
        done
        rm -f AP*.tar.md5
        ls -1 *.lz4 || echo "⚠️ Nessun file .lz4 trovato"

    - name: Decomprimi tutti i file .lz4
      run: |
        cd firmware
        for f in *.lz4; do
          base=$(basename "$f" .lz4)
          echo "🧩 Decomprimo $f -> $base"
          lz4 -d "$f" "$base" || true
          rm -f "$f"
        done
        ls -lh *.img || echo "⚠️ Nessun file .img estratto"

    - name: Suddividi super.img in partizioni
      run: |
        mkdir extracted
        if [ -f firmware/super.img ]; then
          echo "📖 Suddivisione super.img..."
          lpunpack firmware/super.img extracted/ || echo "⚠️ Impossibile estrarre super.img"
        else
          echo "⚠️ Nessun super.img trovato, salto step."
        fi
        ls -lh extracted || true

    - name: Comprimi Tutto in ZIP
      run: |
        cd firmware
        cp -r ../extracted . || true
        zip -r "../${{ github.event.inputs.base_name }}_estratto.zip" .
        cd ..
        ls -lh "${{ github.event.inputs.base_name }}_estratto.zip"

    - name: Setup SSH per SourceForge
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SF_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan frs.sourceforge.net >> ~/.ssh/known_hosts

    - name: Upload su SourceForge
      run: |
        scp "${{ github.event.inputs.base_name }}_estratto.zip" thewinner02@frs.sourceforge.net:/home/frs/project/oneui-ports/test/
